// <auto-generated />
using System;
using InvestmentPerformance.Api.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvestmentPerformance.Api.Migrations
{
    [DbContext(typeof(InvestmentPerformanceDbContext))]
    [Migration("20210513113142_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvestmentPerformance.Api.Entities.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentPrice")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Investments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CurrentPrice = 35.35m,
                            Name = "INVEST1",
                            UpdatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CurrentPrice = 12.00m,
                            Name = "INVEST2",
                            UpdatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CurrentPrice = 23.5m,
                            Name = "INVEST3",
                            UpdatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CurrentPrice = 19.22m,
                            Name = "INVEST4",
                            UpdatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Api.Entities.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostBasisPerShare")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfShares")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserInvestmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserInvestmentId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostBasisPerShare = 30.42m,
                            CreatedDate = new DateTime(2020, 2, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            NumberOfShares = 25,
                            UpdatedDate = new DateTime(2020, 2, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserInvestmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CostBasisPerShare = 33.22m,
                            CreatedDate = new DateTime(2020, 5, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            NumberOfShares = 100,
                            UpdatedDate = new DateTime(2020, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserInvestmentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CostBasisPerShare = 19.23m,
                            CreatedDate = new DateTime(2021, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            NumberOfShares = 35,
                            UpdatedDate = new DateTime(2021, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserInvestmentId = 2
                        },
                        new
                        {
                            Id = 4,
                            CostBasisPerShare = 12.75m,
                            CreatedDate = new DateTime(2021, 2, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            NumberOfShares = 200,
                            UpdatedDate = new DateTime(2021, 2, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserInvestmentId = 2
                        },
                        new
                        {
                            Id = 5,
                            CostBasisPerShare = 30.2m,
                            CreatedDate = new DateTime(2021, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            NumberOfShares = 15,
                            UpdatedDate = new DateTime(2021, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserInvestmentId = 2
                        },
                        new
                        {
                            Id = 6,
                            CostBasisPerShare = 10.98m,
                            CreatedDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            NumberOfShares = 55,
                            UpdatedDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserInvestmentId = 3
                        },
                        new
                        {
                            Id = 7,
                            CostBasisPerShare = 31.00m,
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            NumberOfShares = 45,
                            UpdatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserInvestmentId = 4
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Api.Entities.UserInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentId");

                    b.HasIndex("UserId", "InvestmentId")
                        .IsUnique();

                    b.ToTable("UserInvestments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2020, 2, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            InvestmentId = 1,
                            UpdatedDate = new DateTime(2020, 2, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "sXybwQ7JaDJ88jxAkBpTRWepUF4wfKvi@clients"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2021, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InvestmentId = 3,
                            UpdatedDate = new DateTime(2021, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "sXybwQ7JaDJ88jxAkBpTRWepUF4wfKvi@clients"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            CreatedDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            InvestmentId = 4,
                            UpdatedDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "sXybwQ7JaDJ88jxAkBpTRWepUF4wfKvi@clients"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            InvestmentId = 1,
                            UpdatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "anotherUserId"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            InvestmentId = 2,
                            UpdatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "anotherUserId"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            InvestmentId = 1,
                            UpdatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "anotherUserId2"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            InvestmentId = 4,
                            UpdatedDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "anotherUserId2"
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Api.Entities.Purchase", b =>
                {
                    b.HasOne("InvestmentPerformance.Api.Entities.UserInvestment", "UserInvestment")
                        .WithMany("Purchases")
                        .HasForeignKey("UserInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInvestment");
                });

            modelBuilder.Entity("InvestmentPerformance.Api.Entities.UserInvestment", b =>
                {
                    b.HasOne("InvestmentPerformance.Api.Entities.Investment", "Investment")
                        .WithMany()
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("InvestmentPerformance.Api.Entities.UserInvestment", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
